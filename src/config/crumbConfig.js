const config = require('./config')
const cookieConfig = require('./cookieConfig')

const crumbOptions = {
  // Ideally we would get this value from constants.js in the same way we have
  // set other values. However whatever we name the cookie we also have to
  // specify within the hidden input field of our forms e.g.
  // <input id="defra-csrf-token" type="hidden" name="DefraCsrfToken" value="{{DefraCsrfToken}}">
  // If the two are not the same then no value is inserted into html response.
  //
  // The problem is we currently cannot see a solution whereby we can somehow
  // insert the token generated by Crumb using an arg we have added to the
  // context to specify its custom name.
  // So for example we could in the baseController say
  // `pageContext.crumbKey = Constants.CRSF_COOKIE_KEY` but if we then do this
  // <input type="hidden" name="crumb" value="{{pageContext.crumbKey}}">  we'll
  // just get the string value 'DefraCsrfToken`.
  key: 'DefraCsrfToken',
  cookieOptions: cookieConfig.options
}

// Don't require CSRF tokens when running tests
if (config.nodeEnvironment === 'test') {
  crumbOptions.skip = function () { return true }
}

module.exports = { options: crumbOptions }
